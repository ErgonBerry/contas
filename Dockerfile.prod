# Stage 1: Build Frontend
FROM node:18-alpine AS frontend-builder

WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .
RUN npm run build

# Stage 2: Build Backend (if needed, otherwise just copy)
FROM node:18-alpine AS backend-builder

WORKDIR /app

COPY package*.json ./
RUN npm install --production

COPY server.js .
# COPY .env . # Assuming .env is needed for backend in production, adjust as necessary
# If backend has a build step, add it here, e.g., RUN npm run build:backend

# Stage 3: Final Production Image
FROM nginx:alpine

# Install Node.js for backend
RUN apk add --no-cache nodejs npm

# Copy Nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built frontend from frontend-builder stage
COPY --from=frontend-builder /app/dist /usr/share/nginx/html

# Copy backend from backend-builder stage
COPY --from=backend-builder /app/server.js /app/server.js
COPY --from=backend-builder /app/node_modules /app/node_modules


WORKDIR /app

# Expose port 80 for Nginx
EXPOSE 80

# Start Nginx and Node.js backend
CMD ["sh", "-c", "node server.js & nginx -g 'daemon off;'"]
